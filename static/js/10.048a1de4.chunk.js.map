{"version":3,"sources":["utils/axiosHandler.js","api/board.js","../node_modules/@mui/material/utils/isMuiElement.js","../node_modules/@mui/utils/esm/isMuiElement.js","../node_modules/@mui/material/FormControl/formControlClasses.js","../node_modules/@mui/material/FormControl/FormControl.js","../node_modules/@mui/material/TextField/textFieldClasses.js","../node_modules/@mui/material/TextField/TextField.js","pages/board/CreatePost.js"],"names":["axiosInstance","axios","create","baseURL","process","paramsSerializer","params","qs","stringify","interceptors","request","use","config","err","Promise","reject","response","data","POST_URL","getPostList","a","get","createPost","post","getPost","id","deletePost","delete","updatePost","put","isMuiElement","element","muiNames","React","indexOf","type","muiName","getFormControlUtilityClasses","slot","generateUtilityClass","generateUtilityClasses","_excluded","FormControlRoot","styled","name","overridesResolver","styles","ownerState","_extends","root","capitalize","margin","fullWidth","display","flexDirection","position","minWidth","padding","border","verticalAlign","marginTop","marginBottom","width","FormControl","inProps","ref","props","useThemeProps","children","className","color","component","disabled","error","visuallyFocused","focused","hiddenLabel","required","size","variant","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","initialAdornedStart","forEach","child","input","isAdornedStart","adornedStart","setAdornedStart","initialFilled","isFilled","filled","setFilled","focusedState","setFocused","undefined","onFilled","childContext","onBlur","onEmpty","onFocus","registerEffect","_jsx","FormControlContext","Provider","value","as","clsx","getTextFieldUtilityClass","variantComponent","standard","Input","FilledInput","outlined","OutlinedInput","TextFieldRoot","TextField","autoComplete","autoFocus","defaultValue","FormHelperTextProps","helperText","idOverride","InputLabelProps","inputProps","InputProps","inputRef","label","maxRows","minRows","multiline","onChange","placeholder","rows","select","SelectProps","InputMore","shrink","notched","native","useId","helperTextId","inputLabelId","InputComponent","InputElement","_jsxs","InputLabel","htmlFor","Select","labelId","FormHelperText","CreatePost","enqueueSnackbar","useSnackbar","navigate","useNavigate","user","useSelector","state","goBackList","initialValues","title","content","author","authorId","authorName","submit","validationSchema","Yup","shape","max","onSubmit","values","setSubmitting","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","container","spacing","item","xs","md","Boolean","style","backgroundColor","customStyle","justifyContent","disableElevation","onClick","font","borderRadius","borderColor"],"mappings":"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","file":"static/js/10.048a1de4.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport qs from 'qs';\r\n\r\nconst axiosInstance = axios.create({\r\n\tbaseURL: process.env.REACT_APP_API_SERVER,\r\n\tparamsSerializer: (params) => qs.stringify(params),\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n\t(config) => {\r\n\t\treturn config;\r\n\t},\r\n\t(err) => {\r\n\t\t// eslint-disable-next-line no-undef\r\n\t\treturn Promise.reject(err);\r\n\t},\r\n);\r\n\r\naxiosInstance.interceptors.response.use(({data: response}) => {\r\n\treturn response;\r\n});\r\nexport default axiosInstance;\r\n\r\n","import {default as axios} from 'utils/axiosHandler';\r\n\r\nconst POST_URL = '/api/v1/posts';\r\n\r\n// [1 게시판] 게시글 리스트 읽기(get)\r\nexport const getPostList = async () => axios.get(POST_URL);\r\n\r\n// [2 게시글 작성] Todo: 게시글 생성(post)\r\nexport const createPost = async (params) => axios.post(POST_URL, params); // export const createPost = 작성해주세요.\r\n\r\n// [3 게시글 상세] 게시글 읽기(get)정\r\nexport const getPost = async ({id}) => axios.get(`${POST_URL}/${id}`);\r\n\r\n// [3 게시글 상세] Todo: 게시글 지우기(delete)\r\nexport const deletePost = async ({id}) => axios.delete(`${POST_URL}/${id}`); // export const deletePost = 작성해주세요.\r\n\r\n// [4 게시글 수정] Todo: 게시글 수정(put)\r\nexport const updatePost = async ({id}, params) =>\r\n\taxios.put(`${POST_URL}/${id}`, params); // export const updatePost = 작성해주세요.\r\n","import { unstable_isMuiElement as isMuiElement } from '@mui/utils';\nexport default isMuiElement;","import * as React from 'react';\nexport default function isMuiElement(element, muiNames) {\n  return /*#__PURE__*/React.isValidElement(element) && muiNames.indexOf(element.type.muiName) !== -1;\n}","import { generateUtilityClasses, generateUtilityClass } from '@mui/base';\nexport function getFormControlUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControl', slot);\n}\nconst formControlClasses = generateUtilityClasses('MuiFormControl', ['root', 'marginNone', 'marginNormal', 'marginDense', 'fullWidth', 'disabled']);\nexport default formControlClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"focused\", \"fullWidth\", \"hiddenLabel\", \"margin\", \"required\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { isFilled, isAdornedStart } from '../InputBase/utils';\nimport capitalize from '../utils/capitalize';\nimport isMuiElement from '../utils/isMuiElement';\nimport FormControlContext from './FormControlContext';\nimport { getFormControlUtilityClasses } from './formControlClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    margin,\n    fullWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', margin !== 'none' && `margin${capitalize(margin)}`, fullWidth && 'fullWidth']\n  };\n  return composeClasses(slots, getFormControlUtilityClasses, classes);\n};\n\nconst FormControlRoot = styled('div', {\n  name: 'MuiFormControl',\n  slot: 'Root',\n  overridesResolver: ({\n    ownerState\n  }, styles) => {\n    return _extends({}, styles.root, styles[`margin${capitalize(ownerState.margin)}`], ownerState.fullWidth && styles.fullWidth);\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  flexDirection: 'column',\n  position: 'relative',\n  // Reset fieldset default style.\n  minWidth: 0,\n  padding: 0,\n  margin: 0,\n  border: 0,\n  verticalAlign: 'top'\n}, ownerState.margin === 'normal' && {\n  marginTop: 16,\n  marginBottom: 8\n}, ownerState.margin === 'dense' && {\n  marginTop: 8,\n  marginBottom: 4\n}, ownerState.fullWidth && {\n  width: '100%'\n}));\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *\n *  - FormLabel\n *  - FormHelperText\n *  - Input\n *  - InputLabel\n *\n * You can find one composition example below and more going to [the demos](/components/text-fields/#components).\n *\n * ```jsx\n * <FormControl>\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n * </FormControl>\n * ```\n *\n * ⚠️ Only one `InputBase` can be used within a FormControl because it create visual inconsistencies.\n * For instance, only one input can be focused at the same time, the state shouldn't be shared.\n */\n\nconst FormControl = /*#__PURE__*/React.forwardRef(function FormControl(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControl'\n  });\n\n  const {\n    children,\n    className,\n    color = 'primary',\n    component = 'div',\n    disabled = false,\n    error = false,\n    focused: visuallyFocused,\n    fullWidth = false,\n    hiddenLabel = false,\n    margin = 'none',\n    required = false,\n    size = 'medium',\n    variant = 'outlined'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    disabled,\n    error,\n    fullWidth,\n    hiddenLabel,\n    margin,\n    required,\n    size,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const [adornedStart, setAdornedStart] = React.useState(() => {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    let initialAdornedStart = false;\n\n    if (children) {\n      React.Children.forEach(children, child => {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        const input = isMuiElement(child, ['Select']) ? child.props.input : child;\n\n        if (input && isAdornedStart(input.props)) {\n          initialAdornedStart = true;\n        }\n      });\n    }\n\n    return initialAdornedStart;\n  });\n  const [filled, setFilled] = React.useState(() => {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    let initialFilled = false;\n\n    if (children) {\n      React.Children.forEach(children, child => {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        if (isFilled(child.props, true)) {\n          initialFilled = true;\n        }\n      });\n    }\n\n    return initialFilled;\n  });\n  const [focusedState, setFocused] = React.useState(false);\n\n  if (disabled && focusedState) {\n    setFocused(false);\n  }\n\n  const focused = visuallyFocused !== undefined && !disabled ? visuallyFocused : focusedState;\n  let registerEffect;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const registeredInput = React.useRef(false);\n\n    registerEffect = () => {\n      if (registeredInput.current) {\n        console.error(['MUI: There are multiple `InputBase` components inside a FormControl.', 'This creates visual inconsistencies, only use one `InputBase`.'].join('\\n'));\n      }\n\n      registeredInput.current = true;\n      return () => {\n        registeredInput.current = false;\n      };\n    };\n  }\n\n  const onFilled = React.useCallback(() => {\n    setFilled(true);\n  }, []);\n  const onEmpty = React.useCallback(() => {\n    setFilled(false);\n  }, []);\n  const childContext = {\n    adornedStart,\n    setAdornedStart,\n    color,\n    disabled,\n    error,\n    filled,\n    focused,\n    fullWidth,\n    hiddenLabel,\n    size,\n    onBlur: () => {\n      setFocused(false);\n    },\n    onEmpty,\n    onFilled,\n    onFocus: () => {\n      setFocused(true);\n    },\n    registerEffect,\n    required,\n    variant\n  };\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(FormControlRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControl.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the component is displayed in focused state.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `true`, the component will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * If `true`, the label is hidden.\n   * This is used to increase density for a `FilledInput`.\n   * Be sure to add `aria-label` to the `input` element.\n   * @default false\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default FormControl;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTextFieldUtilityClass(slot) {\n  return generateUtilityClass('MuiTextField', slot);\n}\nconst textFieldClasses = generateUtilityClasses('MuiTextField', ['root']);\nexport default textFieldClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"autoComplete\", \"autoFocus\", \"children\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"maxRows\", \"minRows\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport { getTextFieldUtilityClass } from './textFieldClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTextFieldUtilityClass, classes);\n};\n\nconst TextFieldRoot = styled(FormControl, {\n  name: 'MuiTextField',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/api/form-control/)\n * - [InputLabel](/api/input-label/)\n * - [FilledInput](/api/filled-input/)\n * - [OutlinedInput](/api/outlined-input/)\n * - [Input](/api/input/)\n * - [FormHelperText](/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\n\nconst TextField = /*#__PURE__*/React.forwardRef(function TextField(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTextField'\n  });\n\n  const {\n    autoComplete,\n    autoFocus = false,\n    children,\n    className,\n    color = 'primary',\n    defaultValue,\n    disabled = false,\n    error = false,\n    FormHelperTextProps,\n    fullWidth = false,\n    helperText,\n    id: idOverride,\n    InputLabelProps,\n    inputProps,\n    InputProps,\n    inputRef,\n    label,\n    maxRows,\n    minRows,\n    multiline = false,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    placeholder,\n    required = false,\n    rows,\n    select = false,\n    SelectProps,\n    type,\n    value,\n    variant = 'outlined'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    autoFocus,\n    color,\n    disabled,\n    error,\n    fullWidth,\n    multiline,\n    required,\n    select,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('MUI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n\n  const InputMore = {};\n\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n\n    InputMore.label = label;\n  }\n\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n\n    InputMore['aria-describedby'] = undefined;\n  }\n\n  const id = useId(idOverride);\n  const helperTextId = helperText && id ? `${id}-helper-text` : undefined;\n  const inputLabelId = label && id ? `${id}-label` : undefined;\n  const InputComponent = variantComponent[variant];\n\n  const InputElement = /*#__PURE__*/_jsx(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    maxRows: maxRows,\n    minRows: minRows,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n\n  return /*#__PURE__*/_jsxs(TextFieldRoot, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant,\n    ownerState: ownerState\n  }, other, {\n    children: [label != null && label !== '' && /*#__PURE__*/_jsx(InputLabel, _extends({\n      htmlFor: id,\n      id: inputLabelId\n    }, InputLabelProps, {\n      children: label\n    })), select ? /*#__PURE__*/_jsx(Select, _extends({\n      \"aria-describedby\": helperTextId,\n      id: id,\n      labelId: inputLabelId,\n      value: value,\n      input: InputElement\n    }, SelectProps, {\n      children: children\n    })) : InputElement, helperText && /*#__PURE__*/_jsx(FormHelperText, _extends({\n      id: helperTextId\n    }, FormHelperTextProps, {\n      children: helperText\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n\n  /**\n   * Props applied to the [`FormHelperText`](/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Props applied to the [`InputLabel`](/api/input-label/) element.\n   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.\n   */\n  InputLabelProps: PropTypes.object,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/api/filled-input/),\n   * [`OutlinedInput`](/api/outlined-input/) or [`Input`](/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * If `true`, a `textarea` element is rendered instead of an input.\n   * @default false\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The short hint displayed in the `input` before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * If `true`, the label is displayed as required and the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Render a [`Select`](/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   * @default false\n   */\n  select: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n\n  /**\n   * The size of the component.\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default TextField;","import React from 'react';\r\nimport * as Yup from 'yup';\r\nimport {\r\n\tButton,\r\n\tFormHelperText,\r\n\tGrid,\r\n\tStack,\r\n\tTextareaAutosize,\r\n\tTextField,\r\n} from '@mui/material';\r\nimport {Formik} from 'formik';\r\nimport {createPost} from 'api/board';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport {useSnackbar} from 'notistack';\r\nimport {useSelector} from 'react-redux';\r\n\r\nconst CreatePost = () => {\r\n\t// [api 연결] useSnackbar에서 enqueueSnackbar 가져오기\r\n\tconst {enqueueSnackbar} = useSnackbar();\r\n\r\n\t// [이벤트 매핑] Todo: useNavigate에서 navigate 가져오기\r\n\tconst navigate = useNavigate(); // 작성해주세요.\r\n\r\n\t// [이벤트 매핑] store에서 user State 가져오기\r\n\tconst user = useSelector((state) => state.user);\r\n\tconst {id, name} = user;\r\n\r\n\tconst goBackList = () => {\r\n\t\t// [이벤트 매핑] Todo: 게시판 페이지로 이동(/board)\r\n\t\tnavigate('/board'); // 작성해주세요.\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\ttitle: '',\r\n\t\t\t\t\tcontent: '',\r\n\t\t\t\t\tauthor: {\r\n\t\t\t\t\t\t// [이벤트 매핑] user 정보 입력\r\n\t\t\t\t\t\tauthorId: id,\r\n\t\t\t\t\t\tauthorName: name,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tsubmit: null,\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object().shape({\r\n\t\t\t\t\t// [이벤트 매핑] title validation : string 타입, 최대 255자, 필수(작성 안하면 '제목은 필수입니다.')\r\n\t\t\t\t\ttitle: Yup.string().max(255).required('제목은 필수입니다.'),\r\n\t\t\t\t})}\r\n\t\t\t\tonSubmit={async (values, {setSubmitting}) => {\r\n\t\t\t\t\t// [api 연결] 중복 방지를 위해 isSubmitting 상태 변경\r\n\t\t\t\t\tsetSubmitting(true);\r\n\t\t\t\t\t// [api 연결] Todo: 게시글 작성 api 호출\r\n\t\t\t\t\tawait createPost(values); // 작성해주세요\r\n\r\n\t\t\t\t\tsetSubmitting(false);\r\n\r\n\t\t\t\t\t// [api 연결]  snackbar를 이용해 api 호출 결과 피드백\r\n\t\t\t\t\tenqueueSnackbar('게시글을 등록하였습니다.', {\r\n\t\t\t\t\t\tvariant: 'success',\r\n\t\t\t\t\t});\r\n\t\t\t\t\t// [이벤트 매핑] Todo: 게시판 페이지로 이동\r\n\t\t\t\t\t//navigate('/board'); // 작성해주세요.\r\n\t\t\t\t\tgoBackList();\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{({\r\n\t\t\t\t\terrors,\r\n\t\t\t\t\thandleBlur,\r\n\t\t\t\t\thandleChange,\r\n\t\t\t\t\thandleSubmit,\r\n\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\ttouched,\r\n\t\t\t\t\tvalues,\r\n\t\t\t\t}) => (\r\n\t\t\t\t\t<form noValidate onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t\t\t<Grid item xs={24} md={12}>\r\n\t\t\t\t\t\t\t\t<Stack spacing={1}>\r\n\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\terror={Boolean(\r\n\t\t\t\t\t\t\t\t\t\t\ttouched.title && errors.title,\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\tid='title'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.title}\r\n\t\t\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='제목을 입력하세요'\r\n\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor: 'white'}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t{touched.title && errors.title && (\r\n\t\t\t\t\t\t\t\t\t\t<FormHelperText\r\n\t\t\t\t\t\t\t\t\t\t\terror\r\n\t\t\t\t\t\t\t\t\t\t\tid='helper-text-title-signup'\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{errors.title}\r\n\t\t\t\t\t\t\t\t\t\t</FormHelperText>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Stack>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<Stack spacing={1}>\r\n\t\t\t\t\t\t\t\t\t<TextareaAutosize\r\n\t\t\t\t\t\t\t\t\t\tid='content'\r\n\t\t\t\t\t\t\t\t\t\tname='content'\r\n\t\t\t\t\t\t\t\t\t\tminRows={5}\r\n\t\t\t\t\t\t\t\t\t\taria-label='maximum height'\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='내용을 입력하세요'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.content}\r\n\t\t\t\t\t\t\t\t\t\tstyle={customStyle}\r\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Stack>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t{errors.submit && (\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<FormHelperText error>\r\n\t\t\t\t\t\t\t\t\t\t{errors.submit}\r\n\t\t\t\t\t\t\t\t\t</FormHelperText>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\t\tjustifyContent='flex-end'\r\n\t\t\t\t\t\t\t\tstyle={{marginTop: 10}}\r\n\t\t\t\t\t\t\t\tspacing={2}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tdisableElevation\r\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\tsize='large'\r\n\t\t\t\t\t\t\t\t\t\t// [api 연결] submit 버튼으로 지정\r\n\t\t\t\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t등록\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tdisableElevation\r\n\t\t\t\t\t\t\t\t\t\tsize='large'\r\n\t\t\t\t\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\t\t\t\t\t// [이벤트 매핑] 클릭시 게시판 페이지로 돌아가는 함수 매핑\r\n\t\t\t\t\t\t\t\t\t\tonClick={goBackList}\r\n\t\t\t\t\t\t\t\t\t\tcolor='error'\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t취소\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t)}\r\n\t\t\t</Formik>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default CreatePost;\r\n\r\nconst customStyle = {\r\n\tpadding: '10.5px 14px 10.5px 12px',\r\n\tfont: 'inherit',\r\n\tborderRadius: '4px',\r\n\tborderColor: '#d9d9d9',\r\n};\r\n"],"sourceRoot":""}